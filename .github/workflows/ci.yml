name: CI Pipeline

on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - develop

jobs:
  duplicity-jscpd:
    name: "Duplicidad con jscpd"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar jscpd
        run: npm install -g jscpd
      - name: Ejecutar jscpd (yml, scripts)
        run: |
          jscpd --threshold 30 --min-tokens 10 --pattern "**/*.{yml,sh,py}" --reporters console ./scripts ./tests

  check-comments:
    name: "Verificar comentarios en español"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Buscar comentarios en español
        run: |
          # Buscar archivos modificados en el PR
          files=$(git diff --name-only origin/develop...${{ github.event.pull_request.head.sha }})
          fail=0
          for f in $files; do
            case "$f" in
              *.py|*.sh|*.tf|*.yml)
                # Busca algún comentario en español (palabras comunes)
                if ! grep -E -q "#.*(el|la|en|este|función|parámetro|devuelve|devuelve|configura|script|modifica|comentario)" "$f"; then
                  echo "Falta comentario en español en $f"
                  fail=1
                fi
                ;;
            esac
          done
          if [ "$fail" = "1" ]; then exit 1; fi

  test:
    name: "Tests unitarios"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Configurar entorno Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Instalar dependencias Python
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Ejecutando doc_extractor.py para generar archivos de documentación
        run: |
          python scripts/doc_extractor.py
      - name: Ejecutar tests unitarios (pytest)
        run: pytest --maxfail=1 --disable-warnings

  lint:
    name: "Linters: flake8, tflint"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Instalar flake8
        run: pip install flake8
      - name: Ejecutar flake8
        run: flake8 .
      - name: Instalando tflint
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
      - name: Ejecutando tflint a módulos terraform 
        run: |
          cd infra/modules
          tflint